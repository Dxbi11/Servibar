datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["rhel-openssl-1.0.x"]
}

model Hotel {
  id       Int       @id @default(autoincrement())
  name     String
  floors   Floor[]   @relation(name: "FloorToHotel")
  rooms    Room[]    @relation(name: "HotelToRoom")
  products Product[] @relation(name: "ProductToHotel")
  invoices Invoice[] @relation(name: "InvoiceToHotel")
}

model Floor {
  id          Int    @id @default(autoincrement())
  floorNumber Int    @unique
  hotelId     Int
  hotel       Hotel  @relation(name: "FloorToHotel", fields: [hotelId], references: [id])
  rooms       Room[] @relation(name: "FloorToRoom")
}

model Room {
  id           Int        @id @default(autoincrement())
  roomNumber   Int
  hotelId      Int
  floorId      Int
  hotel        Hotel      @relation(name: "HotelToRoom", fields: [hotelId], references: [id])
  floor        Floor      @relation(name: "FloorToRoom", fields: [floorId], references: [id])
  minibarItems RoomStock? @relation(name: "RoomToRoomStock")
  locked       Boolean    @default(false)
  state        Int
  comment      String?
  checked      Boolean?

  @@unique([roomNumber, hotelId])
}

model Product {
  id           Int           @id @default(autoincrement())
  name         String
  price        Float?
  roomStocks   RoomStock[]   @relation(name: "ProductToRoomStock")
  invoiceItems InvoiceItem[] @relation(name: "InvoiceItemToProduct")
  hotel        Hotel?        @relation(name: "ProductToHotel", fields: [hotelId], references: [id])
  hotelId      Int?
}

model RoomStock {
  id        Int     @id @default(autoincrement())
  productId Int
  quantity  Int
  room      Room    @relation(name: "RoomToRoomStock", fields: [roomId], references: [id])
  product   Product @relation(name: "ProductToRoomStock", fields: [productId], references: [id])
  roomId    Int     @unique

  @@unique([roomId, productId])
}

model Invoice {
  id      Int           @id @default(autoincrement())
  total   Float?
  items   InvoiceItem[] @relation(name: "InvoiceToInvoiceItem")
  date    DateTime?     @default(now())
  hotelId Int?
  hotel   Hotel?        @relation(name: "InvoiceToHotel", fields: [hotelId], references: [id])
  comment String?
  room    Int?
}

model InvoiceItem {
  id        Int     @id @default(autoincrement())
  invoiceId Int
  productId Int
  quantity  Int
  invoice   Invoice @relation(name: "InvoiceToInvoiceItem", fields: [invoiceId], references: [id])
  product   Product @relation(name: "InvoiceItemToProduct", fields: [productId], references: [id])
}
